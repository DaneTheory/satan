#!/usr/bin/env node

var satan   = require('..'),
    command = process.argv[2],
    name    = process.argv[3],
    dirname = require('path').dirname,
    argv    = require('optimist').argv;

if (!name)
  return usage();

if (process.getuid && process.getuid() != 0) {
  console.log('Almighty satan requires root. What did you expect?');
  process.exit(1);
}

function usage() {
  console.log('Usage: satan [command] [daemon-name]');
  console.log('Where command is one of: exists, create, ensure_created, start, stop, ensure_stopped, destroy, ensure_destroyed.')
  process.exit(1);
}

function get_opts() {
  var obj = {
    key: name,
    bin: argv.bin,
    path: argv.path || dirname(argv.bin),
    args: argv.args,
    user: argv.user,
    name: argv.name,
    desc: argv.desc
  };

  if (process.platform == 'win32')
    obj.daemon_path = argv.daemon_path

  return obj;
}

function done(err, res) {
  if (err)
    console.log('Error: ' + err.message);
  else
    console.log('Success!');
}

switch (command) {
  case 'exists':
    return satan.exists(name, function(err, bool) {
      console.log(err ? 'Error: ' + err.message : 'Exists: ' + bool);
    });
    break;

  case 'create':
    return satan.create(get_opts(), done);
    break;

  case 'ensure_created':
   return satan.ensure_created(get_opts(), done);
   break;

  case 'start':
    return satan.start(name, done);
    break;

  case 'stop':
    return satan.stop(name, done);
    break;

  case 'ensure_stopped':
    return satan.ensure_stopped(name, done);
    break;

  case 'remove':
  case 'delete':
  case 'destroy':
    return satan.destroy(name, done);
    break;

  case 'ensure_destroyed':
    return satan.ensure_destroyed(name, done);
    break;

  default:
    usage();
}
